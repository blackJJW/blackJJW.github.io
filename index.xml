<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome to My Technical Blog :: Black_JJW&#39;s Blog</title>
    <link>https://blackjjw.github.io/index.html</link>
    <description>Hi, I’m Jung Jin Woo, an AI-focused Full Stack &amp; MLOps Engineer based in South Korea.&#xA;On this blog, I share my projects, development logs, technical experiments, and personal study notes, focusing on:&#xA;Real-time AI video processing systems MLOps workflows and system optimization Backend architecture and distributed systems 🚀 Featured Projects 🔧 Multi Crypto Trading Tool:&#xA;A REST-based multi-exchange crypto trading platform – currently in development (WIP) 📬 Contact 📧 Email: jjinwoo92@gmail.com 🐙 GitHub: blackJJW</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://blackjjw.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multi Crypto Trading Tool</title>
      <link>https://blackjjw.github.io/multi-crypto-trading-tool/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blackjjw.github.io/multi-crypto-trading-tool/index.html</guid>
      <description>Project Overview This project is designed to aggregate real-time data from multiple cryptocurrency exchanges and execute automated trades using a variety of strategies. Performance and scalability are key priorities in its development.&#xA;📊 System Architecture To better illustrate the architecture of this project, the diagram below shows how different components interact within a Docker Compose environment:&#xA;All services communicate over a shared Docker network. The Core Layer includes the frontend, backend, and worker services. The Infra Layer consists of Redis (for both queuing and caching). The Monitoring Layer captures metrics using Prometheus and displays dashboards via Grafana. 📁 Dev Logs 1. Project Initialization 2. Start Backend 3. Logger Configuration 4. Set Configuration 5. Database Connection Manager 6. Login Page Setup 7. Topbar Menu 8. Login Log 9. Refactoring 1: Backend - Separate AuthService and Move Login API 10. Managing API Keys - Backend Implementation 11. Managing API Keys - Frontend Implementation 12. Refactoring 2: Backend - Applying Async Database Management</description>
    </item>
    <item>
      <title>Learning Notes</title>
      <link>https://blackjjw.github.io/learning_notes/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blackjjw.github.io/learning_notes/index.html</guid>
      <description></description>
    </item>
  </channel>
</rss>